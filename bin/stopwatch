#!/usr/bin/perl

# PODNAME: stopwatch

use strict;
use warnings FATAL => 'all';

use Carp;
use POSIX qw(floor);

my $true = 1;
my $false = '';

sub clear {
    # '01:02:12' is 8 symbols
    my $char_count = 8;

    print "\r" x $char_count;
    return '';
}

sub print_seconds {
    my ($seconds) = @_;

    my ($h, $m, $s) = get_h_m_s($seconds);

    printf("%02d:%02d:%02d", $h, $m, $s);

    return '';
}

sub get_h_m_s {
    my ($seconds) = @_;

    my $h = floor($seconds / (60*60));
    croak 'Number is too big' if $h > 99;

    my $m = floor( ($seconds - $h*60*60) / 60 );
    my $s = $seconds - $h*60*60 - $m*60;

    return $h, $m, $s;
}

=begin comment get_seconds_from_string

    get_seconds_from_string( '3s' ); # 3
    get_seconds_from_string( '20m' ); # 1200

=end comment

=cut

sub get_seconds_from_string {
    my ($string) = @_;

    if ($string =~ /^([1-9][0-9]*)\s*s$/i) {
        return $1;
    } elsif ($string =~ /^([1-9][0-9]*)\s*m$/i) {
        return $1 * 60;
    } else {
        $string = '' if not defined $string;
        croak "Can't parse string '$string'";
    }
}

sub main {

    # unbuffer STDOUT
    $|++;

    my $seconds = 0;

    while ($true) {

        clear();
        print_seconds($seconds);

        sleep 1;
        $seconds++;

    }

}
main() if not caller;

1;
